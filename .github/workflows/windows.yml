# This is a basic workflow to help you get started with Actions

name: myWindows

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:
    name: ${{ matrix.config.name }}
    runs-on: ${{ matrix.config.os }}
    strategy:
      fail-fast: false
      matrix:
        config:
        - {
            name: "Windows Latest MSVC", artifact: "Windows-MSVC.tar.xz",
            os: windows-latest,
            cc: "cl", cxx: "cl",
            environment_script: "C:/Program Files (x86)/Microsoft Visual Studio/2019/Enterprise/VC/Auxiliary/Build/vcvars64.bat"
          }
        #- {
        #    name: "Windows Latest MinGW", artifact: "Windows-MinGW.tar.xz",
        #    os: windows-latest,
        #    cc: "gcc", cxx: "g++"
        #  }
        #- {
        #    name: "Ubuntu Latest GCC", artifact: "Linux.tar.xz",
        #    os: ubuntu-latest,
        #    cc: "gcc", cxx: "g++"
        #  }
        - {
            name: "macOS Latest Clang", artifact: "macOS.tar.xz",
            os: macos-latest,
            cc: "clang", cxx: "clang++"
          }
          
    steps:
      - name: Cache Qt
        id: cache-qt
        uses: actions/cache@v1
        with:
          path: ../Qt
          key: QtCache

      - name: Install Qt
        uses: jurplel/install-qt-action@v2
        with:
          cached: false #${{ steps.cache-qt.outputs.cache-hit }}
          version: 5.13.2
          
      - uses: actions/checkout@v1
      - name: Configure
        run: |
          mkdir build
          cd build
          cmake ..
          ls
          
      - name: Build
        run: |
          cd build
          pwd 
          ls
          cmake --build .
